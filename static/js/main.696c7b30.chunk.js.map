{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varaint","start","end","value","duration","separator","colr","Date","toDateString","variant","console","log","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","ladel","borderColor","fill","backgroundColor","barChart","label","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.696c7b30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1BGkG\",\"card\":\"Cards_card__sf9Ss\",\"infected\":\"Cards_infected__2svEv\",\"recovered\":\"Cards_recovered__p6vN1\",\"deaths\":\"Cards_deaths__RL6HG\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate} }) => {\r\n    if( !confirmed || !recovered || !deaths || !lastUpdate){\r\n        console.log(recovered)\r\n        return 'Loading...';\r\n    }\r\n    return(\r\n        <div className = {styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography varaint=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=',' />\r\n                        </Typography>\r\n                        <Typography colr=\"textSecondery\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography varaint=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=',' />\r\n                        </Typography>\r\n                        <Typography colr=\"textSecondery\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography varaint=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=',' />\r\n                        </Typography>\r\n                        <Typography colr=\"textSecondery\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of death cases by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","import axios from 'axios';\r\n\r\nconst url = `https://covid19.mathdro.id/api`;\r\n\r\nexport const fetchData = async(country) => {\r\n    let changeableUrl = url;\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try{\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n        const modifiedData = { confirmed, recovered, deaths, lastUpdate};\r\n        return modifiedData;\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const { data: {countries }} = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name)\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (<Line\r\n                data={{\r\n                    labels: dailyData.map(({ date }) => date),\r\n                    datasets: [{\r\n                        data: dailyData.map(({ confirmed }) => confirmed),\r\n                        ladel: 'Infected',\r\n                        borderColor: 'rgba(0,0,255,0.5)',\r\n                        fill: true,\r\n                    }, {\r\n                        data: dailyData.map(({ deaths }) => deaths),\r\n                        ladel: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255,0,0,0.5)',\r\n                        fill: true\r\n                    }],\r\n                }}\r\n            />)\r\n            : null\r\n\r\n    );\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [\r\n                        {\r\n                            label: 'People',\r\n                            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                            data: [confirmed.value, recovered.value, deaths.value],\r\n                        },\r\n                    ],\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}` },\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker","import React from 'react';\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport coronaImage from './images/image.png'\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({data: fetchedData});\n    console.log(this.state.data)\n  }\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({data: fetchedData, country: country})\n    console.log(fetchedData);\n    // set the state\n  }\n\n  render(){\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\n        <Cards data={data}/>\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2mQ4j\",\"image\":\"App_image__2yqCi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3MpUa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3fCG4\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}